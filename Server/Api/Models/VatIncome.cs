// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TaxumoChatBot.Api.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    public partial class VatIncome
    {
        /// <summary>
        /// Initializes a new instance of the VatIncome class.
        /// </summary>
        public VatIncome()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the VatIncome class.
        /// </summary>
        public VatIncome(int company, int? vatId = default(int?), string entryType = default(string), string aTC = default(string), double? vatableSale = default(double?), double? outputVat = default(double?), double? zeroRatedVatSale = default(double?), double? vatExemptSale = default(double?), double? vatWithheld = default(double?), double? netReceived = default(double?), string businessAddress = default(string), string businessTin = default(string), int? id = default(int?), double? amount = default(double?), string description = default(string), string controlNo = default(string), System.DateTime? transactionDate = default(System.DateTime?), System.DateTime? dateModified = default(System.DateTime?), string business = default(string), string receipt = default(string), int? category = default(int?))
        {
            VatId = vatId;
            EntryType = entryType;
            ATC = aTC;
            VatableSale = vatableSale;
            OutputVat = outputVat;
            ZeroRatedVatSale = zeroRatedVatSale;
            VatExemptSale = vatExemptSale;
            VatWithheld = vatWithheld;
            NetReceived = netReceived;
            BusinessAddress = businessAddress;
            BusinessTin = businessTin;
            Id = id;
            Company = company;
            Amount = amount;
            Description = description;
            ControlNo = controlNo;
            TransactionDate = transactionDate;
            DateModified = dateModified;
            Business = business;
            Receipt = receipt;
            Category = category;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatId")]
        public int? VatId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "EntryType")]
        public string EntryType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ATC")]
        public string ATC { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatableSale")]
        public double? VatableSale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OutputVat")]
        public double? OutputVat { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ZeroRatedVatSale")]
        public double? ZeroRatedVatSale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatExemptSale")]
        public double? VatExemptSale { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatWithheld")]
        public double? VatWithheld { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NetReceived")]
        public double? NetReceived { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessAddress")]
        public string BusinessAddress { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "BusinessTin")]
        public string BusinessTin { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Company")]
        public int Company { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Amount")]
        public double? Amount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Description")]
        public string Description { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ControlNo")]
        public string ControlNo { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TransactionDate")]
        public System.DateTime? TransactionDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DateModified")]
        public System.DateTime? DateModified { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Business")]
        public string Business { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Receipt")]
        public string Receipt { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Category")]
        public int? Category { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            //Nothing to validate
        }
    }
}
