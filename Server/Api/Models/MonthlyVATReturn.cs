// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TaxumoChatBot.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class MonthlyVATReturn
    {
        /// <summary>
        /// Initializes a new instance of the MonthlyVATReturn class.
        /// </summary>
        public MonthlyVATReturn()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the MonthlyVATReturn class.
        /// </summary>
        public MonthlyVATReturn(int? month = default(int?), int? year = default(int?), bool? isAmendment = default(bool?), int? attachmentCount = default(int?), IList<VatableSalesComputation> vatableSalesComputation = default(IList<VatableSalesComputation>), double? vatableSales = default(double?), double? vatableSalesOutput = default(double?), double? governmentSales = default(double?), double? governmentSalesOutput = default(double?), double? zeroRatedSales = default(double?), double? exemptSales = default(double?), double? totalSales = default(double?), double? totalSalesOutput = default(double?), double? previousPeriodInputTaxCarriedOver = default(double?), double? previousPeriodInputTaxDeferredCapitalGood = default(double?), double? transitionalInputTax = default(double?), double? presumptiveInputTax = default(double?), double? otherInputTax = default(double?), double? totalInputTax = default(double?), IList<PurchaseCapitalGoodsNotExceedComputation> capitalGoodsNotExceedingComputation = default(IList<PurchaseCapitalGoodsNotExceedComputation>), double? capitalGoodsNotExceeding = default(double?), double? capitalGoodsNotExceedingOutput = default(double?), IList<PurchaseThisPeriod> purchaseThisPeriod = default(IList<PurchaseThisPeriod>), IList<PurchasePreviousPeriod> purchasePreviousPeriod = default(IList<PurchasePreviousPeriod>), double? capitalGoodsExceeding = default(double?), double? capitalGoodsExceedingOutput = default(double?), double? domesticGoods = default(double?), double? domesticGoodsOutput = default(double?), double? importedGoods = default(double?), double? importedGoodsOutput = default(double?), double? domesticServices = default(double?), double? domesticServicesOutput = default(double?), double? nonResidentServices = default(double?), double? nonResidentServicesOutput = default(double?), double? notQualifiedPurchases = default(double?), double? otherPurchases = default(double?), double? otherPurchasesOutput = default(double?), double? totalCurrentPurchases = default(double?), double? totalAvailableInputTax = default(double?), double? succedingPeriodCapitalGoodsDeferred = default(double?), double? governmentSalesClosedExpense = default(double?), double? allocableExemptSales = default(double?), double? vatRefund = default(double?), double? otherDeductions = default(double?), double? totalDeductions = default(double?), double? totalAllowableInputTax = default(double?), double? netVatPayable = default(double?), double? vatWithheld = default(double?), double? paymentsForSugarFlourIndustries = default(double?), double? vatWithheldToGovernment = default(double?), double? previousVatPaymentFromCurrentPeriod = default(double?), double? advancePayments = default(double?), double? otherCredits = default(double?), double? totalCredits = default(double?), double? totalAmountPayable = default(double?), TaxPayer taxPayer = default(TaxPayer), double? taxPayable = default(double?), int? daysLate = default(int?), double? surcharge = default(double?), double? compromise = default(double?), double? interest = default(double?), double? penalties = default(double?))
        {
            Month = month;
            Year = year;
            IsAmendment = isAmendment;
            AttachmentCount = attachmentCount;
            VatableSalesComputation = vatableSalesComputation;
            VatableSales = vatableSales;
            VatableSalesOutput = vatableSalesOutput;
            GovernmentSales = governmentSales;
            GovernmentSalesOutput = governmentSalesOutput;
            ZeroRatedSales = zeroRatedSales;
            ExemptSales = exemptSales;
            TotalSales = totalSales;
            TotalSalesOutput = totalSalesOutput;
            PreviousPeriodInputTaxCarriedOver = previousPeriodInputTaxCarriedOver;
            PreviousPeriodInputTaxDeferredCapitalGood = previousPeriodInputTaxDeferredCapitalGood;
            TransitionalInputTax = transitionalInputTax;
            PresumptiveInputTax = presumptiveInputTax;
            OtherInputTax = otherInputTax;
            TotalInputTax = totalInputTax;
            CapitalGoodsNotExceedingComputation = capitalGoodsNotExceedingComputation;
            CapitalGoodsNotExceeding = capitalGoodsNotExceeding;
            CapitalGoodsNotExceedingOutput = capitalGoodsNotExceedingOutput;
            PurchaseThisPeriod = purchaseThisPeriod;
            PurchasePreviousPeriod = purchasePreviousPeriod;
            CapitalGoodsExceeding = capitalGoodsExceeding;
            CapitalGoodsExceedingOutput = capitalGoodsExceedingOutput;
            DomesticGoods = domesticGoods;
            DomesticGoodsOutput = domesticGoodsOutput;
            ImportedGoods = importedGoods;
            ImportedGoodsOutput = importedGoodsOutput;
            DomesticServices = domesticServices;
            DomesticServicesOutput = domesticServicesOutput;
            NonResidentServices = nonResidentServices;
            NonResidentServicesOutput = nonResidentServicesOutput;
            NotQualifiedPurchases = notQualifiedPurchases;
            OtherPurchases = otherPurchases;
            OtherPurchasesOutput = otherPurchasesOutput;
            TotalCurrentPurchases = totalCurrentPurchases;
            TotalAvailableInputTax = totalAvailableInputTax;
            SuccedingPeriodCapitalGoodsDeferred = succedingPeriodCapitalGoodsDeferred;
            GovernmentSalesClosedExpense = governmentSalesClosedExpense;
            AllocableExemptSales = allocableExemptSales;
            VatRefund = vatRefund;
            OtherDeductions = otherDeductions;
            TotalDeductions = totalDeductions;
            TotalAllowableInputTax = totalAllowableInputTax;
            NetVatPayable = netVatPayable;
            VatWithheld = vatWithheld;
            PaymentsForSugarFlourIndustries = paymentsForSugarFlourIndustries;
            VatWithheldToGovernment = vatWithheldToGovernment;
            PreviousVatPaymentFromCurrentPeriod = previousVatPaymentFromCurrentPeriod;
            AdvancePayments = advancePayments;
            OtherCredits = otherCredits;
            TotalCredits = totalCredits;
            TotalAmountPayable = totalAmountPayable;
            TaxPayer = taxPayer;
            TaxPayable = taxPayable;
            DaysLate = daysLate;
            Surcharge = surcharge;
            Compromise = compromise;
            Interest = interest;
            Penalties = penalties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Month")]
        public int? Month { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Year")]
        public int? Year { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAmendment")]
        public bool? IsAmendment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttachmentCount")]
        public int? AttachmentCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatableSalesComputation")]
        public IList<VatableSalesComputation> VatableSalesComputation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatableSales")]
        public double? VatableSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatableSalesOutput")]
        public double? VatableSalesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GovernmentSales")]
        public double? GovernmentSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GovernmentSalesOutput")]
        public double? GovernmentSalesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ZeroRatedSales")]
        public double? ZeroRatedSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ExemptSales")]
        public double? ExemptSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalSales")]
        public double? TotalSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalSalesOutput")]
        public double? TotalSalesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousPeriodInputTaxCarriedOver")]
        public double? PreviousPeriodInputTaxCarriedOver { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousPeriodInputTaxDeferredCapitalGood")]
        public double? PreviousPeriodInputTaxDeferredCapitalGood { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TransitionalInputTax")]
        public double? TransitionalInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PresumptiveInputTax")]
        public double? PresumptiveInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OtherInputTax")]
        public double? OtherInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalInputTax")]
        public double? TotalInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CapitalGoodsNotExceedingComputation")]
        public IList<PurchaseCapitalGoodsNotExceedComputation> CapitalGoodsNotExceedingComputation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CapitalGoodsNotExceeding")]
        public double? CapitalGoodsNotExceeding { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CapitalGoodsNotExceedingOutput")]
        public double? CapitalGoodsNotExceedingOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PurchaseThisPeriod")]
        public IList<PurchaseThisPeriod> PurchaseThisPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PurchasePreviousPeriod")]
        public IList<PurchasePreviousPeriod> PurchasePreviousPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CapitalGoodsExceeding")]
        public double? CapitalGoodsExceeding { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "CapitalGoodsExceedingOutput")]
        public double? CapitalGoodsExceedingOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DomesticGoods")]
        public double? DomesticGoods { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DomesticGoodsOutput")]
        public double? DomesticGoodsOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImportedGoods")]
        public double? ImportedGoods { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "ImportedGoodsOutput")]
        public double? ImportedGoodsOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DomesticServices")]
        public double? DomesticServices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DomesticServicesOutput")]
        public double? DomesticServicesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NonResidentServices")]
        public double? NonResidentServices { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NonResidentServicesOutput")]
        public double? NonResidentServicesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NotQualifiedPurchases")]
        public double? NotQualifiedPurchases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OtherPurchases")]
        public double? OtherPurchases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OtherPurchasesOutput")]
        public double? OtherPurchasesOutput { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalCurrentPurchases")]
        public double? TotalCurrentPurchases { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAvailableInputTax")]
        public double? TotalAvailableInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SuccedingPeriodCapitalGoodsDeferred")]
        public double? SuccedingPeriodCapitalGoodsDeferred { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "GovernmentSalesClosedExpense")]
        public double? GovernmentSalesClosedExpense { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AllocableExemptSales")]
        public double? AllocableExemptSales { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatRefund")]
        public double? VatRefund { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OtherDeductions")]
        public double? OtherDeductions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalDeductions")]
        public double? TotalDeductions { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAllowableInputTax")]
        public double? TotalAllowableInputTax { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "NetVatPayable")]
        public double? NetVatPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatWithheld")]
        public double? VatWithheld { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PaymentsForSugarFlourIndustries")]
        public double? PaymentsForSugarFlourIndustries { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "VatWithheldToGovernment")]
        public double? VatWithheldToGovernment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousVatPaymentFromCurrentPeriod")]
        public double? PreviousVatPaymentFromCurrentPeriod { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AdvancePayments")]
        public double? AdvancePayments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "OtherCredits")]
        public double? OtherCredits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalCredits")]
        public double? TotalCredits { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAmountPayable")]
        public double? TotalAmountPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxPayer")]
        public TaxPayer TaxPayer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxPayable")]
        public double? TaxPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DaysLate")]
        public int? DaysLate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Surcharge")]
        public double? Surcharge { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Compromise")]
        public double? Compromise { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Interest")]
        public double? Interest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Penalties")]
        public double? Penalties { get; set; }

    }
}
