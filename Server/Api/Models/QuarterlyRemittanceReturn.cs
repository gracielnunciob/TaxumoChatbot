// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TaxumoChatBot.Api.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class QuarterlyRemittanceReturn
    {
        /// <summary>
        /// Initializes a new instance of the QuarterlyRemittanceReturn class.
        /// </summary>
        public QuarterlyRemittanceReturn()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the QuarterlyRemittanceReturn class.
        /// </summary>
        public QuarterlyRemittanceReturn(int? year = default(int?), int? quarter = default(int?), int? attachmentCount = default(int?), bool? isAmendment = default(bool?), bool? hasWithheldTaxes = default(bool?), IList<TaxWithheldItem> taxWithheldItems = default(IList<TaxWithheldItem>), double? taxesWithheld = default(double?), double? firstMonthRemittance = default(double?), double? secondMonthRemittance = default(double?), double? previousRemittance = default(double?), double? previousQuarterOverRemittance = default(double?), double? totalRemittance = default(double?), double? taxDue = default(double?), double? totalAmountPayable = default(double?), TaxPayer taxPayer = default(TaxPayer), double? taxPayable = default(double?), int? daysLate = default(int?), double? surcharge = default(double?), double? compromise = default(double?), double? interest = default(double?), double? penalties = default(double?))
        {
            Year = year;
            Quarter = quarter;
            AttachmentCount = attachmentCount;
            IsAmendment = isAmendment;
            HasWithheldTaxes = hasWithheldTaxes;
            TaxWithheldItems = taxWithheldItems;
            TaxesWithheld = taxesWithheld;
            FirstMonthRemittance = firstMonthRemittance;
            SecondMonthRemittance = secondMonthRemittance;
            PreviousRemittance = previousRemittance;
            PreviousQuarterOverRemittance = previousQuarterOverRemittance;
            TotalRemittance = totalRemittance;
            TaxDue = taxDue;
            TotalAmountPayable = totalAmountPayable;
            TaxPayer = taxPayer;
            TaxPayable = taxPayable;
            DaysLate = daysLate;
            Surcharge = surcharge;
            Compromise = compromise;
            Interest = interest;
            Penalties = penalties;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Year")]
        public int? Year { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Quarter")]
        public int? Quarter { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "AttachmentCount")]
        public int? AttachmentCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "IsAmendment")]
        public bool? IsAmendment { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "HasWithheldTaxes")]
        public bool? HasWithheldTaxes { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxWithheldItems")]
        public IList<TaxWithheldItem> TaxWithheldItems { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxesWithheld")]
        public double? TaxesWithheld { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "FirstMonthRemittance")]
        public double? FirstMonthRemittance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "SecondMonthRemittance")]
        public double? SecondMonthRemittance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousRemittance")]
        public double? PreviousRemittance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "PreviousQuarterOverRemittance")]
        public double? PreviousQuarterOverRemittance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalRemittance")]
        public double? TotalRemittance { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxDue")]
        public double? TaxDue { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TotalAmountPayable")]
        public double? TotalAmountPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxPayer")]
        public TaxPayer TaxPayer { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "TaxPayable")]
        public double? TaxPayable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "DaysLate")]
        public int? DaysLate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Surcharge")]
        public double? Surcharge { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Compromise")]
        public double? Compromise { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Interest")]
        public double? Interest { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "Penalties")]
        public double? Penalties { get; set; }

    }
}
