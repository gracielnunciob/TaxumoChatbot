// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TaxumoChatBot.Api
{
    using Models;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for Discounts.
    /// </summary>
    public static partial class DiscountsExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='code'>
            /// </param>
            /// <param name='sku'>
            /// </param>
            public static object ValidateCoupon(this IDiscounts operations, string code, string sku)
            {
                return operations.ValidateCouponAsync(code, sku).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='code'>
            /// </param>
            /// <param name='sku'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ValidateCouponAsync(this IDiscounts operations, string code, string sku, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValidateCouponWithHttpMessagesAsync(code, sku, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='referralCode'>
            /// </param>
            /// <param name='userId'>
            /// </param>
            /// <param name='company'>
            /// </param>
            public static object ValidateReferralCode(this IDiscounts operations, string referralCode, string userId, int company)
            {
                return operations.ValidateReferralCodeAsync(referralCode, userId, company).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='referralCode'>
            /// </param>
            /// <param name='userId'>
            /// </param>
            /// <param name='company'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> ValidateReferralCodeAsync(this IDiscounts operations, string referralCode, string userId, int company, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ValidateReferralCodeWithHttpMessagesAsync(referralCode, userId, company, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='code'>
            /// </param>
            /// <param name='user'>
            /// </param>
            public static ErrorMessageResult AddAutoDiscount(this IDiscounts operations, string code, string user)
            {
                return operations.AddAutoDiscountAsync(code, user).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='code'>
            /// </param>
            /// <param name='user'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<ErrorMessageResult> AddAutoDiscountAsync(this IDiscounts operations, string code, string user, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.AddAutoDiscountWithHttpMessagesAsync(code, user, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sku'>
            /// </param>
            public static Coupon GetAutoDiscount(this IDiscounts operations, string sku)
            {
                return operations.GetAutoDiscountAsync(sku).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='sku'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<Coupon> GetAutoDiscountAsync(this IDiscounts operations, string sku, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetAutoDiscountWithHttpMessagesAsync(sku, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
