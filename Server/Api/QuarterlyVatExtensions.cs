// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace TaxumoChatBot.Api
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for QuarterlyVat.
    /// </summary>
    public static partial class QuarterlyVatExtensions
    {
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// </param>
            public static IList<TaxDue> GetQuarterlyVatDues(this IQuarterlyVat operations, int companyId)
            {
                return operations.GetQuarterlyVatDuesAsync(companyId).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='companyId'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TaxDue>> GetQuarterlyVatDuesAsync(this IQuarterlyVat operations, int companyId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetQuarterlyVatDuesWithHttpMessagesAsync(companyId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='year'>
            /// </param>
            /// <param name='quarter'>
            /// </param>
            /// <param name='companyId'>
            /// </param>
            /// <param name='details'>
            /// </param>
            public static object GetQuarterlyVatPreview(this IQuarterlyVat operations, int year, int quarter, int companyId, VatRequiredDetails details)
            {
                return operations.GetQuarterlyVatPreviewAsync(year, quarter, companyId, details).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='year'>
            /// </param>
            /// <param name='quarter'>
            /// </param>
            /// <param name='companyId'>
            /// </param>
            /// <param name='details'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> GetQuarterlyVatPreviewAsync(this IQuarterlyVat operations, int year, int quarter, int companyId, VatRequiredDetails details, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.GetQuarterlyVatPreviewWithHttpMessagesAsync(year, quarter, companyId, details, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='year'>
            /// </param>
            /// <param name='quarter'>
            /// </param>
            /// <param name='companyId'>
            /// </param>
            /// <param name='details'>
            /// </param>
            public static object CreateSubmission(this IQuarterlyVat operations, int year, int quarter, int companyId, VatRequiredDetails details)
            {
                return operations.CreateSubmissionAsync(year, quarter, companyId, details).GetAwaiter().GetResult();
            }

            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='year'>
            /// </param>
            /// <param name='quarter'>
            /// </param>
            /// <param name='companyId'>
            /// </param>
            /// <param name='details'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<object> CreateSubmissionAsync(this IQuarterlyVat operations, int year, int quarter, int companyId, VatRequiredDetails details, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.CreateSubmissionWithHttpMessagesAsync(year, quarter, companyId, details, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
